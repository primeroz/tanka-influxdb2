[global_tags]
  env = "$ENV"
[agent]
  hostname = "$HOSTNAME"
[[outputs.influxdb_v2]]
  #urls = ["http://influxdb.influxdb.svc.cluster.local:8086"]
  urls = ["http://influxdb:8086"]

  token = "$INFLUX_TOKEN"

  organization = "org"
  bucket = "bucket"

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs"]
[[inputs.diskio]]
[[inputs.kernel]]
[[inputs.mem]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]
[[inputs.kubernetes]]
  ## URL for the kubelet
  url = "https://$KUBELET:10250"

  ## Use bearer token for authorization. ('bearer_token' takes priority)
  ## If both of these are empty, we'll use the default serviceaccount:
  ## at: /run/secrets/kubernetes.io/serviceaccount/token
  # bearer_token = "/path/to/bearer/token"
  ## OR
  # bearer_token_string = "abc_123"

  ## Pod labels to be added as tags.  An empty array for both include and
  ## exclude will include all labels.
  # label_include = []
  # label_exclude = ["*"]

  ## Set response_timeout (default 5 seconds)
  # response_timeout = "5s"

  ## Optional TLS Config
  # tls_ca = /path/to/cafile
  # tls_cert = /path/to/certfile
  # tls_key = /path/to/keyfile
  ## Use TLS but skip chain & host verification
  insecure_skip_verify = true
  [inputs.kubernetes.tags]
    job = "kubernetes"
[[inputs.prometheus]]
  urls = ["https://$KUBELET:10250/metrics"]
  bearer_token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
  insecure_skip_verify = true
  metric_version = 2
  [inputs.prometheus.tags]
    job = "kubelet"

# Cadvisor Configuration
[[inputs.prometheus]]
  urls = ["https://$KUBELET:10250/metrics/cadvisor"]
  bearer_token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
  insecure_skip_verify = true
  metric_version = 2
  # remove deprecated container_name, pod_name metrics tags
  # remove high cardinality name tag
  tagexclude = ["container_name", "pod_name", "name"]
  [inputs.prometheus.tags]
    job = "cadvisor"

  [inputs.prometheus.tagdrop]
    # TAG DROP At the end of the input plugin
    # conditions are ORed

    # 1- DROP on metric in cadvisor for the whole POD rather than a container in the pod
    container = [ "POD", ""]
    # 2- DROP any metric with cgroup id from docker, we only want to keep the kubepods and system ones
    id = [ "/docker/*"]


# Convert some tags to fields for cadvisor metrics
[[processors.converter]]
  [processors.converter.tagpass]
    job = [ "cadvisor" ]
  [processors.converter.tags]
    string = ["id", "image"]
